@model Car_Invetory_Project.Models.cars_master

@{
    ViewBag.Title = "Add Car";
}

<h2>Add Car</h2>


@using (Html.BeginForm("create", "car"))
{
    @Html.AntiForgeryToken()
    
<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.car_brand, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.car_brand, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.car_brand, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.car_model, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.car_model, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.car_model, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.year, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.year, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.year, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.isNew, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <div class="checkbox">
                @Html.EditorFor(model => model.isNew, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.isNew, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>

    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.user_Id, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.user_Id, new { htmlAttributes = new { @class = "form-control", @Value = Session["userid"] } })
            @Html.ValidationMessageFor(model => model.user_Id, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.created_at, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.TextBoxFor(model => model.created_at, new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") })
            @Html.ValidationMessageFor(model => model.created_at, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group" style="display:none">
        @Html.LabelFor(model => model.updated_at, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.updated_at, new { htmlAttributes = new { @class = "form-control", @Value = DateTime.Now.ToString("yyyy-MM-dd HH:mm:ss") } })
            @Html.ValidationMessageFor(model => model.updated_at, "", new { @class = "text-danger" })
        </div>
    </div>


    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <br/>
            <input type="submit" value="Add Car" class="btn btn-success" />
        </div>
    </div>
</div>
}

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
